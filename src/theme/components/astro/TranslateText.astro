---
import type { HTMLAttributes } from 'astro/types'
import { translate } from '../../i18n'
import { config } from '../../consts'

type Props = HTMLAttributes<'div'> & {
	t: string
}

const { t, ...props } = Astro.props
---

<script>
	import { getNavigatorLocale, translate } from '../../i18n'
	import { defineCustomElement } from '../../utils/define-custom-element'

	class TranslateText extends HTMLElement {
		get locale() {
			return getNavigatorLocale()
		}

		get text() {
			const text = this.dataset.t || ''
			return translate({
				locale: this.locale,
				text,
			})
		}

		update() {
			if (this.innerText !== this.text) {
				this.innerText = this.text
			}
		}

		connectedCallback() {
			this.update()
		}
	}

	defineCustomElement('t-text', TranslateText)
</script>

<t-text data-t={t} {...props}>
	{
		translate({
			locale: config?.lang?.split('-')[0].toLowerCase() ?? 'zh',
			text: t,
		})
	}
</t-text>
