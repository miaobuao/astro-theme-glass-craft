---
import type { InferGetStaticPropsType } from 'astro'
import { getCollection } from 'astro:content'
import { createFallbackBlogFrontMatterProcessor } from '../../utils/fallback-blog-frontmatter'
import { config } from '../../consts'
import BaseLayout from '../../layouts/BaseLayout.astro'
import moment from 'moment'

export async function getStaticPaths() {
	const fallback = createFallbackBlogFrontMatterProcessor({
		options: {
			slugify: config.slugifyArticleUrl,
		},
	})
	const posts = await getCollection('blog')
		.then((posts) => Promise.all(posts.map(fallback)))
		.then((posts) => posts.filter((p) => !p.frontMatter.isDraft))

	// Collect all unique tags
	const tagMap = new Map<string, typeof posts>()
	for (const post of posts) {
		for (const tag of post.frontMatter.tags) {
			if (!tagMap.has(tag)) {
				tagMap.set(tag, [])
			}
			tagMap.get(tag)!.push(post)
		}
	}

	// Sort posts within each tag by publish date (newest first)
	const paths = Array.from(tagMap.entries()).map(([tag, tagPosts]) => {
		const sortedPosts = tagPosts.sort((a, b) => {
			return a.frontMatter.publishDate > b.frontMatter.publishDate
				? -1
				: a.frontMatter.publishDate < b.frontMatter.publishDate
					? 1
					: 0
		})
		return {
			params: { slug: tag },
			props: { tag, posts: sortedPosts },
		}
	})

	return paths
}

type Props = InferGetStaticPropsType<typeof getStaticPaths>
const { tag, posts } = Astro.props
---

<BaseLayout
	showAuthorInfo
	showToolBar
	showScrollProgress={config.scrollProgress}
	title={`Tag: ${tag}`}
>
	<div class="flex flex-col gap-2 max-sm:glassmorphism rounded-lg p-2">
		<div class="flex items-center gap-2 max-sm:px-2">
			<h1 class="text-2xl font-bold">
				# {tag}
			</h1>
			<div class="text-base sm:text-lg opacity-60 font-mono">
				({posts.length})
			</div>
		</div>
		<div class="flex flex-col gap-1">
			{
				posts.map((post) => (
					<a
						href={`/blog/${post.frontMatter.slug}`}
						class="p-2 rounded-sm transition-all hover:glassmorphism max-sm:active:glassmorphism"
					>
						<div class="flex flex-col sm:flex-row sm:items-baseline gap-1 sm:gap-4">
							<div class="flex-1 font-semibold">{post.frontMatter.title}</div>
							<span class="shrink-0 text-sm opacity-60">
								{moment(post.frontMatter.publishDate).format('YYYY-MM-DD')}
							</span>
						</div>
					</a>
				))
			}
		</div>
	</div>
</BaseLayout>
