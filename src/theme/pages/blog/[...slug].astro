---
import type { InferGetStaticPropsType } from 'astro'
import { getCollection, render } from 'astro:content'
import BlogPostLayout from '../../layouts/BlogPostLayout.astro'
import { config } from '../../consts'
import { slugifyBlogPostUrl } from '../../utils/slugify-blog-post-url'
import { createFallbackBlogFrontMatterProcessor } from '../../utils/fallback-blog-frontmatter'

export async function getStaticPaths() {
	function slugify(id: string) {
		if (config.site.slugifyArticleUrl) {
			return slugifyBlogPostUrl(id)
		}
		return id
	}
	const posts = await getCollection('blog')
	const fallback = createFallbackBlogFrontMatterProcessor({
		options: {
			slugify: config.site.slugifyArticleUrl ?? true,
		},
	})
	return Promise.all(posts.map(fallback)).then((posts) =>
		posts.map((post) => ({
			params: { slug: post.frontMatter.slug },
			props: post,
		})),
	)
}

type Props = InferGetStaticPropsType<typeof getStaticPaths>
const props = Astro.props

const { Content } = await render(props.entry)

const title = props.frontMatter.title
const description = props.frontMatter.description
const pubDate = props.frontMatter.publishDate
---

<BlogPostLayout {title} {description} {pubDate}>
	<Content />
</BlogPostLayout>
