---
import { getCollection } from 'astro:content'
import { GalleryHelper } from '../../utils/gallery'
import BaseLayout from '../../layouts/BaseLayout.astro'
import { AdaptiveImageList } from '../../components/solid/AdaptiveImageList/AdaptiveImageList'
import { GALLERY_THUMBNAIL_CONFIG, config } from '../../consts'

export async function getStaticPaths() {
	const collection = await getCollection('gallery')
	return collection
		.map((g) => ({ helper: new GalleryHelper(g), entry: g }))
		.map(({ helper, entry }) => ({
			params: { slug: helper.slugUrl },
			props: entry,
		}))
}
const gallery = new GalleryHelper(Astro.props)
---

<BaseLayout showAuthorInfo showScrollProgress={config.scrollProgress}>
	<div class="container max-sm:glassmorphism px-2 rounded-lg">
		<h1 class="text-3xl font-bold">{gallery.title}</h1>
		{
			gallery.gallerySections.map(async (section) => (
				<Fragment>
					<h2 class="text-xl font-semibold">{section.title}</h2>

					<AdaptiveImageList
						client:only="solid"
						images={await Promise.all(
							section.images.map(async (img) => {
								try {
									const sharp = await img.sharp()
									const meta = await sharp.metadata()
									var size = {
										width: meta.width,
										height: meta.height,
									}
								} catch (e) {
									console.error(e)
									size = {
										width: 1,
										height: 1,
									}
								}
								return {
									src: await img.getUrl(),
									alt: img.description,
									description: img.description,
									thumbnailUrl: await img.getThumbnailUrl(
										GALLERY_THUMBNAIL_CONFIG.size,
										GALLERY_THUMBNAIL_CONFIG.format,
									),
									naturalWidth: size.width,
									naturalHeight: size.height,
								}
							}),
						)}
					/>
				</Fragment>
			))
		}
	</div>
</BaseLayout>

<style>
	.container {
		h1 {
			margin: 1rem 0;
		}
		h2 {
			margin: 0.7rem 0;
		}
	}
</style>
