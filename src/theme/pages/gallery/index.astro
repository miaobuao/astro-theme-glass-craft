---
import { getCollection } from 'astro:content'
import { GalleryHelper } from '../../utils/gallery'
import { GALLERY_THUMBNAIL_CONFIG, config } from '../../consts'
import BaseLayout from '../../layouts/BaseLayout.astro'

const collections = await getCollection('gallery')

let galleries = await Promise.all(
	collections.map(async (entry) => {
		const gallery = new GalleryHelper(entry)
		return {
			href: `/gallery/${gallery.slugUrl}`,
			title: gallery.title,
			coverUrl: await getFirstImage(gallery)?.getThumbnailUrl(
				GALLERY_THUMBNAIL_CONFIG.size,
				GALLERY_THUMBNAIL_CONFIG.format,
			),
			imageCount: gallery.gallerySections.reduce(
				(acc, cur) => acc + cur.images.length,
				0,
			),
		}
	}),
)

galleries = galleries.filter((g) => g.coverUrl)

function getFirstImage(gallery: GalleryHelper) {
	return gallery.gallerySections.at(-1)?.images.at(-1)
}
---

<BaseLayout showAuthorInfo showScrollProgress={config.scrollProgress}>
	<div class:list={['flex flex-wrap max-sm:glassmorphism rounded-lg']}>
		{
			galleries.map(async (g, index) => (
				<Fragment>
					<a
						href={g.href}
						class:list={[
							'w-full p-2 flex sm:flex-col',
							'sm:p-4 sm:w-1/3 md:w-1/4 lg:w-1/5 2xl:w-1/6',
						]}
					>
						<div
							class:list={[
								'group w-[3rem] sm:w-full aspect-square sm:mb-3 relative',
							]}
						>
							<div class="transition group-hover:translate-1.5 translate-1 rounded-lg hidden sm:block bg-white/30 dark:bg-black/30 absolute inset-0" />
							<div class="transition group-hover:translate-0 translate-0 rounded-lg hidden sm:block bg-white/70 dark:bg-black/50 absolute inset-0" />
							<div
								class:list={[
									'transition size-full bg-cover bg-center sm:mb-1 rounded-md sm:rounded-lg',
									'sm:-translate-1 group-hover:-translate-1.5',
								]}
								style={{
									backgroundImage: `url(${g.coverUrl})`,
								}}
							/>
						</div>

						<div class="flex flex-1 justify-between px-4 items-center sm:hidden">
							<p>{g.title}</p>
							<p class="flex justify-center items-center gap-1">
								<span>{g.imageCount}</span>
								<span class="icon-[uiw--right] size-[1rem] text-inherit" />
							</p>
						</div>
						<div class="hidden sm:block">
							<p class="sm:text-sm">{g.title}</p>
							<p class="text-sm opacity-50">{g.imageCount}</p>
						</div>
					</a>

					{index !== galleries.length - 1 && (
						<span class="mx-auto my-1 w-[95%] h-[0.1px] bg-white/80 sm:hidden" />
					)}
				</Fragment>
			))
		}
	</div>
</BaseLayout>
